// <auto-generated />
using System;
using System.Collections.Generic;
using HealthJournal_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HealthJournal_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250829091000_Health_Reports")]
    partial class Health_Reports
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HealthJournal_API.Models.Domain.DailyNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Date")
                        .IsUnique();

                    b.ToTable("DailyNotes");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.DailyNoteAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DailyNoteId")
                        .HasColumnType("integer");

                    b.Property<int>("NoteAttributeId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DailyNoteId");

                    b.HasIndex("NoteAttributeId");

                    b.ToTable("DailyNoteAttributes");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.HealthReportConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("text");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Folder")
                        .HasColumnType("text");

                    b.Property<bool>("IncludeMedicationList")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HealthReportConfigs");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Strength")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.MedicationPlanEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Dosage")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsAsNeeded")
                        .HasColumnType("boolean");

                    b.Property<int>("MedicationId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("StoppedReason")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MedicationId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("MedicationPlanEntries");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.MedicationSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int[]>("DaysOfWeek")
                        .HasColumnType("integer[]");

                    b.Property<int?>("IntervalDays")
                        .HasColumnType("integer");

                    b.Property<int?>("IntervalWeeks")
                        .HasColumnType("integer");

                    b.Property<List<TimeOnly>>("TimesOfDay")
                        .IsRequired()
                        .HasColumnType("time without time zone[]");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("MedicationSchedules");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.NoteAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Element")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NoteAttributes");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.NoteConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NoteConfigurations");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.NoteConfigurationAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NoteAttributeId")
                        .HasColumnType("integer");

                    b.Property<int>("NoteConfigurationId")
                        .HasColumnType("integer");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NoteAttributeId");

                    b.HasIndex("NoteConfigurationId");

                    b.ToTable("NoteConfigurationAttributes");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.Notebook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Notebooks");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int>("NotebookId")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NotebookId");

                    b.HasIndex("ParentId");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.DailyNoteAttribute", b =>
                {
                    b.HasOne("HealthJournal_API.Models.Domain.DailyNote", "DailyNote")
                        .WithMany("Attributes")
                        .HasForeignKey("DailyNoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthJournal_API.Models.Domain.NoteAttribute", "NoteAttribute")
                        .WithMany()
                        .HasForeignKey("NoteAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DailyNote");

                    b.Navigation("NoteAttribute");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.HealthReportConfig", b =>
                {
                    b.OwnsMany("HealthJournal_API.Models.Domain.AttributeVisualization", "AttributesVisualizations", b1 =>
                        {
                            b1.Property<int>("HealthReportConfigId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("AttributeName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("VisualizationType")
                                .HasColumnType("integer");

                            b1.HasKey("HealthReportConfigId", "Id");

                            b1.ToTable("AttributeVisualization");

                            b1.WithOwner()
                                .HasForeignKey("HealthReportConfigId");

                            b1.OwnsOne("HealthJournal_API.Models.Domain.DiaryFilterConfiguration", "Filter", b2 =>
                                {
                                    b2.Property<int>("AttributeVisualizationHealthReportConfigId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("AttributeVisualizationId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("LogicGate")
                                        .HasColumnType("integer");

                                    b2.HasKey("AttributeVisualizationHealthReportConfigId", "AttributeVisualizationId");

                                    b2.ToTable("AttributeVisualization");

                                    b2.WithOwner()
                                        .HasForeignKey("AttributeVisualizationHealthReportConfigId", "AttributeVisualizationId");

                                    b2.OwnsMany("HealthJournal_API.Models.Domain.FilterClause", "Clauses", b3 =>
                                        {
                                            b3.Property<int>("DiaryFilterConfigurationAttributeVisualizationHealthReportConfigId")
                                                .HasColumnType("integer")
                                                .HasColumnName("DiaryFilterConfigurationAttributeVisualizationHealthReportConf~");

                                            b3.Property<int>("DiaryFilterConfigurationAttributeVisualizationId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("integer");

                                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b3.Property<int>("Id"));

                                            b3.Property<string>("Element")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Operator")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.HasKey("DiaryFilterConfigurationAttributeVisualizationHealthReportConfigId", "DiaryFilterConfigurationAttributeVisualizationId", "Id");

                                            b3.ToTable("AttributeVisualization_Clauses");

                                            b3.WithOwner()
                                                .HasForeignKey("DiaryFilterConfigurationAttributeVisualizationHealthReportConfigId", "DiaryFilterConfigurationAttributeVisualizationId");
                                        });

                                    b2.Navigation("Clauses");
                                });

                            b1.Navigation("Filter");
                        });

                    b.OwnsMany("HealthJournal_API.Models.Domain.ColorCodeConfiguration", "ColorCodeConfig", b1 =>
                        {
                            b1.Property<int>("HealthReportConfigId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("ColorHex")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("LogicGate")
                                .HasColumnType("integer");

                            b1.HasKey("HealthReportConfigId", "Id");

                            b1.ToTable("ColorCodeConfiguration");

                            b1.WithOwner()
                                .HasForeignKey("HealthReportConfigId");

                            b1.OwnsMany("HealthJournal_API.Models.Domain.FilterClause", "Clauses", b2 =>
                                {
                                    b2.Property<int>("ColorCodeConfigurationHealthReportConfigId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("ColorCodeConfigurationId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Element")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Operator")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ColorCodeConfigurationHealthReportConfigId", "ColorCodeConfigurationId", "Id");

                                    b2.ToTable("ColorCodeConfiguration_Clauses");

                                    b2.WithOwner()
                                        .HasForeignKey("ColorCodeConfigurationHealthReportConfigId", "ColorCodeConfigurationId");
                                });

                            b1.Navigation("Clauses");
                        });

                    b.Navigation("AttributesVisualizations");

                    b.Navigation("ColorCodeConfig");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.MedicationPlanEntry", b =>
                {
                    b.HasOne("HealthJournal_API.Models.Domain.Medication", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthJournal_API.Models.Domain.MedicationSchedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Medication");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.NoteConfigurationAttribute", b =>
                {
                    b.HasOne("HealthJournal_API.Models.Domain.NoteAttribute", "NoteAttribute")
                        .WithMany()
                        .HasForeignKey("NoteAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthJournal_API.Models.Domain.NoteConfiguration", "NoteConfiguration")
                        .WithMany("NoteAttributes")
                        .HasForeignKey("NoteConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NoteAttribute");

                    b.Navigation("NoteConfiguration");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.Page", b =>
                {
                    b.HasOne("HealthJournal_API.Models.Domain.Notebook", "Notebook")
                        .WithMany("Pages")
                        .HasForeignKey("NotebookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthJournal_API.Models.Domain.Page", "Parent")
                        .WithMany("Subpages")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Notebook");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.DailyNote", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.NoteConfiguration", b =>
                {
                    b.Navigation("NoteAttributes");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.Notebook", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("HealthJournal_API.Models.Domain.Page", b =>
                {
                    b.Navigation("Subpages");
                });
#pragma warning restore 612, 618
        }
    }
}
